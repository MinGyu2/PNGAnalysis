/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pnganalysis;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.StringTokenizer;

public class App {
    public static void main(String[] args) throws IOException{
        var file = new File(args[0]);
        if(!file.exists()){
            System.out.println("Do not exists this file!");
            return;
        }
        var fs = new FileInputStream(file);
        try{   
            var signature = new byte[8];
            fs.read(signature);
            if(!isPNG(signature)){
                System.out.println("This file is not PNG file. Please input the png file!");
                return;
            }
            // find length
            
            var len = new byte[4];
            while(fs.read(len)!=-1){
                // fs.read(len);
                int l = 0;
                for(int i = 0;i<4;i++){
                    l = (l<<8)+((int)len[i]&0xff);
                }
                byte[] data = new byte[l+4]; // type 같이 받아오기
                // System.out.println((char))
                byte[] crc = new byte[4]; // crc 받아오기
                fs.read(data);
                fs.read(crc);

                StringBuilder sb = new StringBuilder();
                sb.append((char)data[0]).append((char)data[1]).append((char)data[2]).append((char)data[3]);
                System.out.println(sb);

                crc32(data,crc);
            }

            // System.out.println(l);
            // System.out.println(Arrays.toString(data));
            // System.out.println(Arrays.toString(crc));
            // IHDR
            // 4byte length
            // 4byte type (chunk name)
            // length byte (chunk data)
            // 4byte (CRC)
        }finally{
            fs.close();
        }
    }
    static void crc32(byte[] stream, byte[] crcB){
        int crc = 0;
        for(int i = 0;i<4;i++){
            crc = (crc<<8) + ((int)crcB[i]&0xff);
        }
        int[] crcTable = new int[256];
        int ployd = 0xedb88320;//Long.parseLong("edb88320", 16);
        // System.out.println(String.format("%x",crc));
        for(int n = 0;n<256;n++){
            int c = n;
            for(int k = 0;k<8;k++){
                if((c&1) == 1){
                    c = ployd^((c>>1)&0x7FFFFFFF);
                }else{
                    c = ((c>>1)&0x7FFFFFFF);
                }
            }
            crcTable[n] = c;
        }
        int c = 0xffffffff;
        for(int i = 0;i<stream.length;i++){
            c = crcTable[(c^stream[i]) & 0xff]^((c>>8)&0xffffff);
        }
        c ^= 0xffffffff;
        System.out.println(String.format("%x", c^crc));
    }
    static boolean isPNG(byte[] signature){
        //-119, 80, 78, 71, 13, 10, 26, 10
        byte[] png = {-119, 80, 78, 71, 13, 10, 26, 10};
        for(int i = 0;i<8;i++){
            if(png[i] != signature[i]){
                return false;
            }
        }
        return true;
    }
}
